Step 0. Ubuntu Linux Server Setup
Step 0a.
    Setup a Ubuntu Linux 18.04 LTS server, with at least 1G memory, 20G storage space.
Step 0b.
    Download Packet Traccer 7.3 for Ubuntu Linux from netacad.com, upload to the server, run "md5sum PacketTracer_730_amd64.deb" to verify the checksum.
    output should be "5cec6d3ff9231f762945168cb0000621  PacketTracer_730_amd64.deb"
Step 0c.
    Upgrade the packages on the server with the following 2 commands 
        apt -y update
        apt -y upgrade

Step 1. Install Docker packages
    Run command "apt -y install docker.io"

Step 2. Create SWAP file (required for server with less memories)
    swapsize=4G (at least 4G for server with 1G memory, please make sure the driver has enough space)
    swapfile="/swapfile" (can be changed to other location)
    fallocate -l $swapsize $swapfile
    mkswap $swapfile
    swapon $swapfile
    fsbswapfile="${swapfile} none swap sw 0 0"
    echo ${fsbswapfile}| tee -a /etc/fstab
    echo 'vm.swappiness=10' | tee -a /etc/sysctl.conf
    echo 'vm.vfs_cache_pressure=50' | tee -a /etc/sysctl.conf
    echo 'GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"' | tee -a /etc/default/grub
    update-grub

Step 3. untar the customized PT docker files and the SQL file
    tar zxvf <the name of the tar.gz file>

Step 4. Build the Packet Tracer docker image
    go into the ptvnc docker sub folder
    docker build . -t ptvnc

Step 5. Pull 3 other required docker images
    docker pull mariadb
    docker pull guacamole/guacamole
    docker pull guacamole/guacd

Step 6. Start MariaDB
    Run the following commands, this Step will take a while
    dbuser="ptdbuser"
    dbpass="ptdbpass"
    dbname="guacamole_db" 
    docker run --name guacamole-mariadb --restart unless-stopped -e MYSQL_ROOT_HOST=% -e MYSQL_DATABASE=${dbname} -e MYSQL_USER=${dbuser} -e MYSQL_PASSWORD=${dbpass} -e MYSQL_RANDOM_ROOT_PASSWORD=1 -d mariadb:latest

Step 7. Start Packet Tracer
    In this step, 10 Packet Tracer container will be started, with the name ptvnc1-ptvnc10
        numofPT=10
    for ((i=1;i<=$numofPT;i++))
    do
        docker run -d --name ptvnc$i --restart unless-stopped --cpus=0.1 -m 512M --kernel-memory 64M --oom-kill-disable --ulimit nproc=512 --ulimit nofile=1024:1024 ptvnc
        sleep $i
    done

    Don't be suprised after this step, the load of CPU may even above 20! It will come down after a while
    The "sleep" command is a kind of urgly workaround for the cloud server with less computing power

Step 8. Import the database dump for guacamole
    docker exec -i guacamole-mariadb mysql -u${dbuser} -p${dbpass} <  ptweb-vnconly/db-dump.sql

Step 9. Setup Guacamole container
    pt-guacamole is the frontend running Apache tomcat and the guacamole web app, it will provide user management and session management support.
    guacd is the controller that will talk to the ptvnc containers and pass the user actions to the PT containers
    The default TCP port for tomcat is 8080, you can change it to 80, or you may also want to consider setup a Nginx or Apache httpd in front of the tomcat.
    For this PoC, we will just use the 8080.

    tomcatport=8080
    linkstr=""
    for ((i=1;i<=$numofPT;i++))
    do
        linkstr="${linkstr} --link ptvnc$i:ptvnc$i"
    done
    docker run --name pt-guacd --restart unless-stopped -d ${linkstr} guacamole/guacd
    sleep 20
    docker run --name pt-guacamole --restart unless-stopped --link pt-guacd:guacd --link guacamole-mariadb:mysql -e MYSQL_DATABASE=${dbname} -e MYSQL_USER=${dbuser} -e MYSQL_PASSWORD=${dbpass} -d -p ${tomcatport}:8080 guacamole/guacamole

Step 10. Clean up and reboot
    apt -y autoremove
    sync
    sync
    sync
    reboot

Step 11. Check after reboot
    After server bootup, there should be 13 containers running. Use "docker ps" to verify, the output should be simliar to below:
    CONTAINER ID        IMAGE                 COMMAND                  CREATED             STATUS              PORTS                    NAMES
6327c0883d99        ptvnc                 "/start"                 6 days ago          Up 6 days                                    ptvnc10
f0856aa5399e        ptvnc                 "/start"                 7 days ago          Up 7 days                                    ptvnc7
d46c38d71401        ptvnc                 "/start"                 7 days ago          Up 7 days                                    ptvnc3
a5b3e2f567a0        guacamole/guacamole   "/opt/guacamole/bin/…"   7 days ago          Up 7 days           0.0.0.0:8080->8080/tcp   pt-guacamole
17bb9c02f7a3        guacamole/guacd       "/bin/sh -c '/usr/lo…"   7 days ago          Up 7 days           4822/tcp                 pt-guacd
c33c86478e78        ptvnc                 "/start"                 7 days ago          Up 7 days                                    ptvnc9
e8c1380bcfcc        ptvnc                 "/start"                 7 days ago          Up 7 days                                    ptvnc8
3aab33c902b5        ptvnc                 "/start"                 7 days ago          Up 7 days                                    ptvnc6
20b2ee8cc5f4        ptvnc                 "/start"                 7 days ago          Up 7 days                                    ptvnc5
1dda6b935bf0        ptvnc                 "/start"                 7 days ago          Up 7 days                                    ptvnc4
cf43c2f3aced        ptvnc                 "/start"                 7 days ago          Up 7 days                                    ptvnc2
3438df4dc5af        ptvnc                 "/start"                 7 days ago          Up 7 days                                    ptvnc1
8edfe12864d6        mariadb:latest        "docker-entrypoint.s…"   7 days ago          Up 7 days           3306/tcp                 guacamole-mariadb

If some container did not bootup, you can start it manually.
For example, run “docker start pt-guacamole” to start the tomcat server with guacamole installed.
Due to the high server load and low memory, sometime this container may not start automatically.

Step 12. Login to the server and test
http://<serverIP>:8080/guacamole/
For this PoC, 11 users and 10 sessions are created.
Username:pt01 (pt02-pt10 also available)
Password:123
Admin user: ptadmin
Admin password: IlovePT
All the username and password can be changed by the admin user. Admin user can also allow enduser change their own password.

In case if any of the Packet Tracer docker have problem, just run "docker restart ptvncX".
If still can not work, stop the docker "docker stop ptvncX", remove it "docker rm ptvncX", 
then recreate it "docker run -d --name ptvncX(CHANGE THIS!) --restart unless-stopped --cpus=0.1 -m 512M --kernel-memory 64M --oom-kill-disable --ulimit nproc=512 --ulimit nofile=1024:1024 ptvnc"

The firefox is installed inside the Packet Tracer container, but we disabled the Internet access.